// Login And SignUp Feature using ARRAY //
#include <stdio.h>
#include <string.h>

typedef struct account{
    char username[50];
    char password[17];
    int day;
    int month;
    int year;
    char phoneNum[15];
    char email[20];
    char city[50];
}Account;

typedef struct loginHistory {
    char username[50];
    char city[50];
}LoginHistory;

typedef struct queue {
    LoginHistory history[5];
    int front, rear, count;
}Queue;

void initializeQueue(Queue *q) {
    q->front = 0;
    q->rear = -1;
    q->count = 0;
}

int isQueueFull(Queue *q) {
    return q->count == 5;
}

int isQueueEmpty(Queue *q) {
    return q->count == 0;
}

void enqueue(Queue *q, char username[], char city[]) {
    if (isQueueFull(q)) {
        q->front = (q->front + 1) % 5;
        q->count--;
    }

    q->rear = (q->rear + 1) % 5;
    strcpy(q->history[q->rear].username, username);
    strcpy(q->history[q->rear].city, city);
    q->count++;

    FILE *file = fopen("logs.txt", "a");
    if (file) {
        fprintf(file, "%s#%s\n", username, city);
        fclose(file);
    } else {
        printf("Error saving login history!\n");
    }
}

void deleteLoginHistory(Queue *q) {
    q->front = 0;
    q->rear = -1;
    q->count = 0;

    FILE *file = fopen("logs.txt", "w");
    if (file) {
        fclose(file);
        printf("Login history successfully deleted!\n\n");
    } else {
        printf("Error deleting login history!\n\n");
    }
}

void displayQueue(Queue *q) {
    if (isQueueEmpty(q)) {
        printf("No login history available.\n");
        return;
    }
    printf("===================================\n");
    printf("           Login History          \n");
    printf("===================================\n");

    int i = q->front;
    for (int j = 0; j < q->count; j++) {
        printf("Username: %s\n", q->history[i].username);
        printf("City    : %s\n", q->history[i].city);
        printf("--------------------\n");
        i = (i + 1) % 5;
    }
}

void displayLoginHistoryFromFile() {
    FILE *file = fopen("logs.txt", "r");
    if (!file) {
        printf("No previous login history found.\n");
        return;
    }

    char username[50], city[50];
    printf("===================================\n");
    printf("           Login History          \n");
    printf("===================================\n");
    while (fscanf(file, "%[^#]#%[^\n]\n", username, city) != EOF) {
        printf("Username: %s\n", username);
        printf("City    : %s\n", city);
        printf("--------------------\n");
    }

    fclose(file);
}

void modifyAccount(Account accounts[], int jumlahData, char user[]) {
    int index = -1;

    for (int i = 0; i < jumlahData; i++) {
        if (strcmp(accounts[i].username, user) == 0) {
            index = i;
            break;
        }
    }

    if (index == -1) {
        printf("Error: Account not found!\n");
        return;
    }

    int choice;
    printf("\n============= Modify Account Details ===============\n");
    printf("1. Change Password\n");
    printf("2. Change Birthdate\n");
    printf("3. Change Phone Number\n");
    printf("4. Change Email\n");
    printf("5. Change City\n");
    printf("6. Cancel\n");
    while (1) {
        printf("Choose an option: ");
        if (scanf("%d", &choice) == 1) {
            break;
        } else {
            printf("Invalid input! Please enter a valid number.\n");
            while (getchar() != '\n');
        }
    }

    switch (choice) {
        case 1:
            printf("Enter new password: ");
            scanf("%s", accounts[index].password);
            break;
        case 2:
            printf("Enter new birthdate (DD MM YYYY): ");
            scanf("%d %d %d", &accounts[index].day, &accounts[index].month, &accounts[index].year);
            break;
        case 3:
            printf("Enter new phone number: ");
            scanf("%s", accounts[index].phoneNum);
            break;
        case 4:
            printf("Enter new email: ");
            scanf("%s", accounts[index].email);
            break;
        case 5:
            printf("Enter new city: ");
            scanf("%s", accounts[index].city);
            break;
        case 6:
            printf("Modification canceled.\n");
            return;
        default:
            printf("Invalid choice!\n");
            return;
    }

    FILE *file = fopen("acc.txt", "w");
    if (!file) {
        printf("Error: Unable to update account file!\n");
        return;
    }

    for (int i = 0; i < jumlahData; i++) {
        fprintf(file, "%s#%s#%d#%d#%d#%s#%s#%s\n", accounts[i].username, accounts[i].password, accounts[i].day, accounts[i].month, accounts[i].year, accounts[i].phoneNum, accounts[i].email, accounts[i].city);
    }
    fclose(file);

    printf("Account details successfully updated!\n");

}

int main(){
    Account accounts[100];
    int choice, jumlahData = 0, a = 0, isValid, picks;
    char user[50], pass[17], temp[17];
    Queue loginQueue;
    initializeQueue(&loginQueue);

    FILE *file = fopen("acc.txt", "r");
    if (!file) {
        printf("File not found!\n");
        return 1;
    }

    while(fscanf(file, "%[^#]#%[^#]#%d#%d#%d#%[^#]#%[^#]#%[^\n]\n", accounts[jumlahData].username, accounts[jumlahData].password, &accounts[jumlahData].day, &accounts[jumlahData].month, &accounts[jumlahData].year, accounts[jumlahData].phoneNum, accounts[jumlahData].email, accounts[jumlahData].city) != EOF) {
        jumlahData++;
    }
    fclose(file);

    int isLoggedIn = 0;
    while(1){
        isValid = 0;
        if (isLoggedIn == 0){
            picks = 0;
            printf("You have not logged in yet, please login or Sign-Up!\n");
            printf("1. Login\n");
            printf("2. Sign-Up\n");
            printf("3. Exit\n");
            while (1) {
                printf("Choice: ");
                if (scanf("%d", &choice) == 1) {
                    while (getchar() != '\n');
                    break;
                } else {
                    printf("Invalid input! Please enter a valid number.\n");
                    while (getchar() != '\n');
                }
            }
        } else {
            choice = 0;
            printf("\nWelcome, %s.\n", user);
            printf("1. LogOut\n");
            printf("2. Login History\n");
            printf("3. Delete Login History\n");
            printf("4. Account Details\n");
            printf("5. Edit Account Details\n");
            printf("6. Exit\n");
            printf("Choice: ");
            while (1) {
                printf("Choice: ");
                if (scanf("%d", &picks) == 1) {
                    while (getchar() != '\n');
                    break;
                } else {
                    printf("Invalid input! Please enter a valid number.\n");
                    while (getchar() != '\n');
                }
            }
        }

        if (isLoggedIn == 0){
            if (choice == 1){
                printf("===================================\n");
                printf("               Login            \n");
                printf("===================================\n");
                printf("Enter -1 to exit\n");

                do {
                    printf("Username: ");
                    scanf(" %[^\n]", user);

                    if ((strcmp(user, "-1")) == 0){
                        printf("Exiting...\n\n");
                        break;
                    }

                    printf("Password: ");
                    scanf(" %[^\n]", pass);

                    for (int i = 0; i < jumlahData; i++) {
                        if (strcmp(accounts[i].username, user) == 0 && strcmp(accounts[i].password, pass) == 0) {
                            isValid = 1;
                            enqueue(&loginQueue, user, accounts[i].city);
                            break;
                        }
                    }

                    if (!isValid) {
                        printf("Something Went Wrong... Incorrect Username or Password!\n");
                        continue;
                    } else {
                        printf("Login Successful!\n");
                        isLoggedIn++;
                        break;
                    }
                    printf("===================================\n");
                } while(1);
            } else {
                if (choice == 2){
                    FILE *signUp = fopen("acc.txt", "a");

                    while(1){
                        printf("===================================\n");
                        printf("               Sign Up            \n");
                        printf("===================================\n");
                        printf("Enter -1 to exit\n");

                        int exitFlag = 0;

                        do {
                            int isDuplicate = 0;
                            printf("Username\t: ");
                            scanf(" %[^\n]", temp);

                            if ((strcmp(temp, "-1")) == 0){
                                printf("Exiting...\n\n");
                                exitFlag = 1;
                                break;
                            }

                            for (int i = 0; i < jumlahData; i++) {
                                if (strcmp(temp, accounts[i].username) == 0) {
                                    printf("\nSorry, Username has been used, please pick a different username!\n");
                                    isDuplicate = 1;
                                    break;
                                }
                            }

                            if (!isDuplicate) {
                                strcpy(accounts[jumlahData].username, temp);
                                fprintf(signUp, "%s#", accounts[jumlahData].username);
                                break;
                            }
                        } while(1);

                        if (exitFlag) {
                            fclose(signUp);
                            break;
                        }

                        do {
                            printf("Password\t: ");
                            scanf(" %s", temp);
                            if (strlen(temp) > 16) {
                                printf("Password is too long! Try again.\n");
                            } else if (strlen(temp) < 5) {
                                printf("Password is too short! Try again.\n");
                            } else {
                                strcpy(accounts[jumlahData].password, temp);
                                fprintf(signUp, "%s#", accounts[jumlahData].password);
                                break;
                            }
                        } while (1);

                        printf("Your Birthdate in numbers (DD MM YYYY)\n");

                        while (1) {
                            printf("day\t: ");
                            if (scanf(" %d", &accounts[jumlahData].day) == 1) {
                                while (getchar() != '\n');
                                break;
                            } else {
                                printf("Invalid input! Please enter a valid number.\n");
                                while (getchar() != '\n');
                            }
                        }
                        fprintf(signUp, "%d#", accounts[jumlahData].day);

                        while (1) {
                            printf("month\t: ");
                            if (scanf(" %d", &accounts[jumlahData].month) == 1) {
                                while (getchar() != '\n');
                                break;
                            } else {
                                printf("Invalid input! Please enter a valid number.\n");
                                while (getchar() != '\n');
                            }
                        }
                        fprintf(signUp, "%d#", accounts[jumlahData].month);

                        while (1) {
                            printf("year\t: ");
                            if (scanf(" %d", &accounts[jumlahData].year) == 1) {
                                while (getchar() != '\n');
                                break;
                            } else {
                                printf("Invalid input! Please enter a valid number.\n");
                                while (getchar() != '\n');
                            }
                        }
                        fprintf(signUp, "%d#", accounts[jumlahData].year);

                        printf("Phone Number\t: ");
                        scanf(" %[^\n]", accounts[jumlahData].phoneNum);
                        fprintf(signUp, "%s#", accounts[jumlahData].phoneNum);

                        printf("Email\t: ");
                        scanf(" %[^\n]", accounts[jumlahData].email);
                        fprintf(signUp, "%s#", accounts[jumlahData].email);

                        printf("City\t: ");
                        scanf(" %[^\n]", accounts[jumlahData].city);
                        fprintf(signUp, "%s\n", accounts[jumlahData].city);

                        fclose(signUp);
                        jumlahData++;
                        printf("===================================\n");
                        break;
                    }
                } else {
                    if (choice == 3){
                        printf("Program Exiting...");
                        break;
                    } else {
                        printf("Invalid input, please try again...\n\n");
                    }
                }
            }
        } else {
            if (picks == 1){
                isLoggedIn = 0;
                printf("Successfully logged Out!\n\n");
            } else {
                if (picks == 2){
                    displayQueue(&loginQueue);
                } else {
                    if (picks == 3){
                        deleteLoginHistory(&loginQueue);
                        displayLoginHistoryFromFile();
                    } else {
                        if (picks == 4){
                            int found = 0, index;

                            for (int i = 0; i < jumlahData; i++) {
                                if (strcmp(accounts[i].username, user) == 0) {
                                    index = i;
                                    found = 1;
                                    break;
                                }
                            }

                            if (found) {
                                printf("\n============= Account Details ===============\n");
                                printf("Username        : %s\n", accounts[index].username);
                                printf("Birthdate       : %d-%d-%d\n", accounts[index].day, accounts[index].month, accounts[index].year);
                                printf("Phone Number    : %s\n", accounts[index].phoneNum);
                                printf("Email           : %s\n", accounts[index].email);
                                printf("City            : %s\n", accounts[index].city);
                                printf("==============================================\n");
                            } else {
                                printf("Error: Account not found!\n");
                            }
                        } else {
                            if (picks == 5){
                                modifyAccount(accounts, jumlahData, user);
                            } else {
                                if (picks == 6){
                                    printf("Program Exiting...");
                                    break;
                                } else {
                                    printf("Invalid input, please try again...\n\n");
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
